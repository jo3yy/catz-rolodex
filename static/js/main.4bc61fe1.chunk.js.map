{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","a","axios","get","users","this","data","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gXAKaA,EAAO,SAACC,GACnB,OACE,sBAAKC,UAAU,iBAAf,UACE,qBACEC,IAAI,UACJC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BAEL,6BAAKL,EAAMI,QAAQE,OACnB,kCAAKN,EAAMI,QAAQG,aCPZC,G,MAAW,SAACR,GAEvB,OACE,qBAAKC,UAAU,YAAf,SACID,EAAMS,SAASC,KAAK,SAAAN,GAAO,OAC3B,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,WCPdM,G,MAAY,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,YAAaC,EAAmB,EAAnBA,aAEvC,OACE,uBACEZ,UAAU,SACVa,KAAK,SACLF,YAAcA,EACdG,SAAWF,MC0CFG,G,wDA3Cb,aAAe,IAAD,8BACZ,gBAgBFH,aAAe,SAACI,GACd,EAAKC,SAAS,CAACC,YAAaF,EAAEG,OAAOC,SAfrC,EAAKC,MAAQ,CACXb,SAAU,GACVU,YAAa,IALH,E,4FASd,4BAAAI,EAAA,sEACsBC,IAAMC,IAAI,6CADhC,OACQC,EADR,OAGEC,KAAKT,SAAS,CACZT,SAAUiB,EAAME,OAJpB,gD,0EAaA,WAAU,IAAD,EAC2BD,KAAKL,MAA/Bb,EADD,EACCA,SAAUU,EADX,EACWA,YAEZU,EAAmBpB,EAASqB,QAAO,SAAA1B,GAAO,OAC9CA,EAAQE,KAAKyB,cAAcC,SAASb,EAAYY,kBAGlD,OACE,sBAAK9B,UAAU,MAAf,UACE,gDACA,cAAC,EAAD,CACEW,YAAY,eACZC,aAAec,KAAKd,eAGtB,cAAC,EAAD,CAAUJ,SAAWoB,W,GAtCXI,cCGHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.4bc61fe1.chunk.js","sourcesContent":["import React from 'react'\n\nimport './card.styles.css'\n\n\nexport const Card = (props) => {\n  return (\n    <div className=\"card-container\">\n      <img \n        alt=\"monster\" \n        src={`https://robohash.org/${props.monster.id}?set=set4&size=180x180`} \n      />\n      <h2>{props.monster.name}</h2>\n      <p> {props.monster.email}</p>\n    </div>\n  )\n}","import React from 'react'\n\nimport { Card } from '../card/card.component'\n\nimport './card-list.styles.css'\n\nexport const CardList = (props) => {\n\n  return (\n    <div className=\"card-list\">\n      { props.monsters.map( monster => (\n        <Card key={monster.id} monster={monster} /> \n      ))}\n    </div>\n  )\n}","import React from 'react'\n\nimport './search-box.styles.css'\n\nexport const SearchBox = ({ placeholder, handleChange }) => {\n\n  return (\n    <input \n      className=\"search\"\n      type=\"search\" \n      placeholder={ placeholder }\n      onChange={ handleChange }\n    />\n  )\n}","import React, { Component } from 'react'\nimport axios from 'axios'\n\nimport { CardList } from './components/card-list/card-list.component'\nimport { SearchBox } from './components/search-box/search-box.component'\nimport './App.css';\n\n\n\nclass App extends Component {\n  constructor() {\n    super()\n\n    this.state = {\n      monsters: [],\n      searchField: ''\n    }\n  }\n\n  async componentDidMount() {  \n    const users = await axios.get('http://jsonplaceholder.typicode.com/users')  \n      \n    this.setState({\n      monsters: users.data\n    })\n  }\n\n  handleChange = (e) => {\n    this.setState({searchField: e.target.value})\n  }\n  \n\n  render() {\n    const { monsters, searchField } = this.state\n\n    const filteredMonsters = monsters.filter(monster => \n      monster.name.toLowerCase().includes(searchField.toLowerCase())\n    )\n\n    return (\n      <div className=\"App\">\n        <h1>Catzz Rolodex </h1>\n        <SearchBox\n          placeholder=\"search catzz\"\n          handleChange={ this.handleChange }\n        />\n\n        <CardList monsters={ filteredMonsters } />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}